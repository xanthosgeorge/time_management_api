services:
  jenkins:
    image: jenkins/jenkins:lts
    ports:
      - "8080:8080"
    volumes:
      - ./jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - "/c/Program Files/Docker/Docker/resources/bin/docker:/usr/bin/docker"

  sonarqube:
    image: sonarqube:latest
    ports:
      - "9000:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    volumes:
      - sonarqube_data:/opt/sonarqube/data

  semgrep:
    image: returntocorp/semgrep
    volumes:
      - .:/src
    command: semgrep --config auto /src > /src/semgrep.txt

  trufflehog:
    image: trufflesecurity/trufflehog:latest
    volumes:
      - .:/repo
    command: git /repo > /repo/trufflehog.txt

  snyk:
    image: node:18
    volumes:
      - .:/app
    working_dir: /app
    environment:
      - SNYK_TOKEN=972a6755-980c-4c60-bfc6-f499b52a418e
    command: >
      sh -c "npm install -g snyk &&
             snyk auth &&
             snyk test --file=package.json > snyk.txt || true"

  sqlmap:
    image: kalilinux/kali-rolling
    command: >
      sh -c "apt update &&
             apt install -y sqlmap &&
             sqlmap -u 'http://host.docker.internal:8080' --batch > sqlmap.txt"

  nmap:
    image: instrumentisto/nmap
    command: -sV host.docker.internal > nmap.txt

  zaproxy:
    image: ghcr.io/zaproxy/zaproxy:latest
    ports:
      - "8090:8090"
    command: zap.sh -daemon -host 0.0.0.0 -port 8090

volumes:
  sonarqube_data:
