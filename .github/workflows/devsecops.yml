name: DevSecOps CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  sast_secrets_build_scan_dast:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      actions: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ---------- SAST (Semgrep) ----------
      - name: Semgrep SAST
        run: |
          docker run --rm -v "$PWD:/src" returntocorp/semgrep \
            semgrep --config=auto --error --json -o semgrep-report.json --metrics=off || true

      # ---------- Secrets (TruffleHog) ----------
      - name: TruffleHog (secrets)
        run: |
          docker run --rm -v "$PWD:/repo" trufflesecurity/trufflehog:latest \
            git /repo --json --only-verified > trufflehog.json || true

      # ---------- Build API image ----------
      - name: Build API image
        run: docker build -t python-api:ci .

      # ---------- Image scan (Trivy) ----------
      - name: Trivy image scan
        run: |
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
            -v "$PWD:/work" -w /work aquasec/trivy:latest image python-api:ci \
            --format json -o trivy-image.json || true

      # ---------- Bring up stack (docker-compose) ----------
      - name: Start API via docker-compose
        run: |
          docker compose -f docker/docker-compose.yml up -d api
          # περίμενε να σηκωθεί
          for i in {1..20}; do
            curl -sSf http://localhost:5000/ && break || sleep 2
          done

      # ---------- DAST (ZAP baseline) ----------
      - name: ZAP baseline
        run: |
          docker run --rm --network host -v "$PWD:/zap/wrk" owasp/zap2docker-stable \
            zap-baseline.py -t http://localhost:5000 -r zap-baseline.html || true

      # ---------- DAST (sqlmap) ----------
      - name: sqlmap
        run: |
          # Προσαρμόσε σε πραγματικό endpoint π.χ. /products?id=1
          docker run --rm --network host paoloo/sqlmap:latest \
            -u "http://localhost:5000/products?id=1" --batch --risk=2 --level=2 || true

      # ---------- DAST (nmap) ----------
      - name: nmap
        run: |
          docker run --rm --network host instrumentisto/nmap \
            nmap -sV -oX nmap.xml 127.0.0.1 || true

      # ---------- Collect artifacts ----------
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            semgrep-report.json
            trufflehog.json
            trivy-image.json
            zap-baseline.html
            nmap.xml

      - name: Teardown
        if: always()
        run: docker compose -f docker/docker-compose.yml down
